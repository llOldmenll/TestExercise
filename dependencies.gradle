ext {
    version_code = 1
    version_name = "1.0"

    androidMinSdkVersion = 24
    androidTargetSdkVersion = 30
    androidCompileSdkVersion = 30
    androidBuildToolsVersion = "30.0.3"

    androidx_core_version = '1.3.2'
    androidx_version = '1.2.0'
    constraint_layout_version = '2.0.4'
    google_material_version = '1.3.0'

    junit_version = '4.13.2'
    androidx_junit_version = '1.1.2'
    espresso_version = '3.3.0'
    mockito_version = '3.3.3'
    mockito_kotlin_version = '2.2.0'
    powermock_version = '2.0.7'

    rib_version = '0.9.2'
    dagger_version = '2.24'

    rxjava_version = '2.2.9'
    rxandroid_version = '2.1.1'
    rxkotlin_version = '2.3.0'
    rxbinding_version = '2.2.0'

    retrofit_version = '2.9.0'
    moshi_version = '1.12.0'
    logging_interceptor_version = '4.9.0'

    glide_version="4.11.0"

    androidLibs = [
            kotlin_stdlib       : "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
            androidx_core       : "androidx.core:core-ktx:$androidx_core_version",
            appcompat           : "androidx.appcompat:appcompat:$androidx_version",
            recycler_view       : "androidx.recyclerview:recyclerview:$androidx_version",
            constraint_layout   : "androidx.constraintlayout:constraintlayout:$constraint_layout_version",
            google_material     : "com.google.android.material:material:$google_material_version",

            // RIBs is the cross-platform architecture framework behind many mobile apps at Uber.
            ribs                : "com.uber.rib:rib-android:$rib_version",

            // Dependency injection framework
            dagger_android      : "com.google.dagger:dagger-android:$dagger_version",
            dagger_androidx     : "com.google.dagger:dagger-android-support:$dagger_version",
            dagger_processor    : "com.google.dagger:dagger-android-processor:$dagger_version",

            // RxJava binding APIs for Android UI widgets from the platform and support libraries
            rxbinding           : "com.jakewharton.rxbinding2:rxbinding:$rxbinding_version"
    ]

    libs = [
            // A library for composing asynchronous and event-based programs by using observable sequences
            rxjava              : "io.reactivex.rxjava2:rxjava:$rxjava_version",
            rxkotlin            : "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version",

            // Dependency injection framework
            dagger              : "com.google.dagger:dagger:$dagger_version",
            dagger_compiler     : "com.google.dagger:dagger-compiler:$dagger_version",

            // Type-safe HTTP client for Android and Java/Kotlin
            retrofit            : "com.squareup.retrofit2:retrofit:$retrofit_version",

            // Deserializer/serializer for entities
            converter_factory   : "com.squareup.retrofit2:converter-moshi:$retrofit_version",

            moshi_codgen        : "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version",
            moshi               : "com.squareup.moshi:moshi:$moshi_version",
            moshi_adapters      : "com.squareup.moshi:moshi-adapters:$moshi_version",
            moshi_kotlin        : "com.squareup.moshi:moshi-kotlin:$moshi_version",

            // An Adapter for adapting RxJava types for Retrofit
            retrofit_rx_adapter : "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version",

            // Network logger
            logging_interceptor : "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version",

            // Glide
            glide               : "com.github.bumptech.glide:glide:$glide_version",
            glide_compiler     : "com.github.bumptech.glide:compiler:$glide_version"
    ]

    androidTestLibs = [
            androidx_junit      : "androidx.test.ext:junit:$androidx_junit_version",
            espresso            : "androidx.test.espresso:espresso-core:$espresso_version"
    ]

    testLibs = [
            // JUnit
            junit               : "junit:junit:$junit_version",

            // Mockito framework
            mockito             : "org.mockito:mockito-core:$mockito_version",
            mockito_inline      : "org.mockito:mockito-inline:$mockito_version",
            mockito_kotlin      : "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version",

            // PowerMock
            powermock           : "org.powermock:powermock-core:$powermock_version",
            powermock_junit     : "org.powermock:powermock-module-junit4:$powermock_version",
            powermock_mockito   : "org.powermock:powermock-api-mockito2:$powermock_version",

            // RIB`s
            ribs                : "com.uber.rib:rib-test-utils:$rib_version",
            ribs_compiler       : "com.uber.rib:rib-compiler-test:$rib_version"
    ]
}